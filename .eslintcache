[{"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/index.tsx":"1","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/reportWebVitals.ts":"2","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/App.tsx":"3","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/router/index.tsx":"4","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/message/index.tsx":"5","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/permission/index.tsx":"6","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/person/index.tsx":"7","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/table/index.tsx":"8","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/notFound/index.tsx":"9","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/home/index.tsx":"10","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/form/index.tsx":"11","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/role/index.tsx":"12","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/router/config.ts":"13","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/MyTable.tsx":"14","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/MapLine.tsx":"15","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/MapPie.tsx":"16","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/MapBar.tsx":"17","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/Map.tsx":"18","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/data/cityMap.ts":"19","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/PeopleFieldChart.tsx":"20","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/PeopleNumberChart.tsx":"21"},{"size":456,"mtime":1620480011291,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1608470547825,"results":"24","hashOfConfig":"23"},{"size":1370,"mtime":1614186767657,"results":"25","hashOfConfig":"23"},{"size":2239,"mtime":1620480011291,"results":"26","hashOfConfig":"23"},{"size":139,"mtime":1614186767662,"results":"27","hashOfConfig":"23"},{"size":142,"mtime":1614186767662,"results":"28","hashOfConfig":"23"},{"size":144,"mtime":1614186767662,"results":"29","hashOfConfig":"23"},{"size":191,"mtime":1614186767663,"results":"30","hashOfConfig":"23"},{"size":130,"mtime":1609332897823,"results":"31","hashOfConfig":"23"},{"size":556,"mtime":1620480011187,"results":"32","hashOfConfig":"23"},{"size":136,"mtime":1614186767660,"results":"33","hashOfConfig":"23"},{"size":136,"mtime":1614186767662,"results":"34","hashOfConfig":"23"},{"size":753,"mtime":1614186767663,"results":"35","hashOfConfig":"23"},{"size":1623,"mtime":1608577108883,"results":"36","hashOfConfig":"23"},{"size":5971,"mtime":1620480011186,"results":"37","hashOfConfig":"23"},{"size":4207,"mtime":1620480011290,"results":"38","hashOfConfig":"23"},{"size":3795,"mtime":1609332897820,"results":"39","hashOfConfig":"23"},{"size":9169,"mtime":1620480313237,"results":"40","hashOfConfig":"23"},{"size":9504,"mtime":1608736091286,"results":"41","hashOfConfig":"23"},{"size":4023,"mtime":1620480011186,"results":"42","hashOfConfig":"23"},{"size":4321,"mtime":1620480011186,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qf99i",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/index.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/reportWebVitals.ts",[],["91","92"],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/App.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/router/index.tsx",["93"],"import \"./index.less\";\n\nimport { Button, Menu } from \"antd\";\n\nimport React from \"react\";\nimport routes from \"./config\";\nimport { useHistory } from \"react-router\";\n\nconsole.log(\"routes\", routes);\n\nconst { SubMenu } = Menu;\n\ninterface Props {}\n\nconst Wrap: React.FC<Props> = (props) => {\n  const history = useHistory();\n\n  // submenu keys of first level\n  const rootSubmenuKeys = [\"sub1\", \"sub2\", \"sub4\"];\n\n  const [openKeys, setOpenKeys] = React.useState([\"sub1\"]);\n\n  const onOpenChange = (keys: any) => {\n    const latestOpenKey = keys.find((key: any) => openKeys.indexOf(key) === -1);\n    if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n      setOpenKeys(keys);\n    } else {\n      setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n    }\n  };\n\n  // 菜单渲染\n  const renderMenu = (data: any) => {\n    let path = \"\";\n    return data.map((item: any) => {\n      if (item.children) {\n        const cItem = item.children.find((cItem: any) => cItem.key === path);\n        if (cItem) {\n          setOpenKeys(item.key); // 把openKey存在this种\n        }\n        return (\n          <SubMenu\n            key={item.key}\n            title={\n              <span>\n                <item.icon type={item.icon} />\n                <span>{item.title}</span>\n              </span>\n            }\n          >\n            {renderMenu(item.children)}\n          </SubMenu>\n        );\n      }\n      // 判断item是否是当前对应的item\n      // if (item.key === path || path.indexOf(item.key) ===0) { //存在二季子路由判断\n\n      return (\n        <Menu.Item title={item.title} key={item.key}>\n          <span\n            key={item.key}\n            onClick={() => {\n              console.log(\"item.key\", item.key);\n              history.push(item.key);\n            }}\n          >\n            <item.icon type={item.icon} />\n            <span> {item.title}</span>\n          </span>\n        </Menu.Item>\n      );\n    });\n  };\n  return (\n    <div className=\"container\">\n      <Menu\n        mode=\"inline\"\n        openKeys={openKeys}\n        onOpenChange={onOpenChange}\n        style={{ width: 256 }}\n      >\n        {renderMenu(routes)}\n      </Menu>\n      <div className=\"content\">{props.children}</div>\n    </div>\n  );\n};\nexport default Wrap;\n","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/message/index.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/permission/index.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/person/index.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/table/index.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/notFound/index.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/home/index.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/form/index.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/pages/role/index.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/router/config.ts",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/MyTable.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/MapLine.tsx",["94","95","96"],"import React, { useEffect, useRef, useState } from \"react\";\nimport echarts, { EChartOption, ECharts } from \"echarts\";\n\ninterface Props {}\nconst rich: any = {\n  one: {\n    color: \"#f5ed00\",\n    fontSize: 25,\n    padding: [1.5, 0],\n    align: \"center\",\n  },\n  two: {\n    color: \"#c58029\",\n    fontSize: 20,\n    padding: [1.5, 0],\n    align: \"center\",\n  },\n  three: {\n    color: \"#fdaaeb\",\n    align: \"center\",\n    fontSize: 32,\n    padding: [1.5, 0],\n  },\n  four: {\n    color: \"#EF3E5A\",\n    fontSize: 25,\n    align: \"center\",\n  },\n  five: {\n    color: \"#f60\",\n    fontSize: 20,\n    align: \"center\",\n  },\n  six: {\n    color: \"#f0f\",\n    fontSize: 20,\n    align: \"center\",\n  },\n};\n\nconst random = (min: number = 100, max: number = 5000) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\nconst dataLine1: any = [\n  { value: random(), name: \"10:00\" },\n  { value: random(), name: \"10:30\" },\n  { value: random(), name: \"11:00\" },\n  { value: random(), name: \"11:30\" },\n  { value: random(), name: \"12:00\" },\n  { value: random(), name: \"12:30\" },\n  { value: random(), name: \"13:00\" },\n  { value: random(), name: \"13:30\" },\n];\nconst dataLine2: any = [\n  { value: random(), name: \"10:00\" },\n  { value: random(), name: \"10:30\" },\n  { value: random(), name: \"11:00\" },\n  { value: random(), name: \"11:30\" },\n  { value: random(), name: \"12:00\" },\n  { value: random(), name: \"12:30\" },\n  { value: random(), name: \"13:00\" },\n  { value: random(), name: \"13:30\" },\n];\nconst dataLine3: any = [\n  { value: random(), name: \"10:00\" },\n  { value: random(), name: \"10:30\" },\n  { value: random(), name: \"11:00\" },\n  { value: random(), name: \"11:30\" },\n  { value: random(), name: \"12:00\" },\n  { value: random(), name: \"12:30\" },\n  { value: random(), name: \"13:00\" },\n  { value: random(), name: \"13:30\" },\n];\nconst dataX: string[] = dataLine3.map((item: any) => item.name);\nconst Map: React.FC<Props> = () => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [echartsInstance, setEchartsInstance] = useState<any>(null);\n  const option: EChartOption | any = {\n    title: {\n      text: \"新增样本/检材/终端数量统计\",\n      subtext: \"子标题\",\n      // left: \"40%\",\n      top: \"10\",\n      right: \"auto\",\n      bottom: \"auto\",\n      textAlign: \"left\", // 标题居中\n    },\n\n    tooltip: {\n      show: true,\n      trigger: \"axis\",\n      backgroundColor: \"#f0f\", //提示标签背景颜色\n      textStyle: { color: \"#ffa\", align: \"left\" }, //提示标签字体颜色\n      // formatter: \"{a} <br/>{b}: {c} ({d}%)\",\n      // formatter: (params: any) => {\n      //   console.log('线图参数:', params)\n      //   return `{a}${params.name}:${params.value}`;\n      // },\n    },\n    /** 图标宽高 */\n    grid: {\n      containLabel: true,\n      left: 10,\n      right: 100,\n      top: 60,\n      bottom: 50,\n    },\n    xAxis: {\n      type: \"category\",\n      boundaryGap: false,\n      data: dataX,\n    },\n    yAxis: {\n      type: \"value\",\n    },\n    // dataZoom: [{ type: \"inside\" }, { type: \"slider\" }],\n    dataZoom: [\n      //给x轴设置滚动条\n      {\n        type: \"slider\",\n        start: 0, //默认为0\n        end: 50,\n        show: true,\n        xAxisIndex: [0],\n        handleSize: 20, //滑动条的 左右2个滑动条的大小\n        height: 20, //组件高度\n        left: 50, //左边的距离\n        right: 100, //右边的距离\n        bottom: 20, //右边的距离\n        handleColor: \"#f60\", //h滑动图标的颜色\n        handleStyle: {\n          borderColor: \"#00f\",\n          borderWidth: \"1\",\n          shadowBlur: 2,\n          background: \"#ddd\",\n          shadowColor: \"#ddd\",\n        },\n        textStyle: {\n          fontSize: 14,\n          lineHeight: '20',\n          color: \"#ddd\",\n        },\n        fillerColor: new echarts.graphic.LinearGradient(1, 0, 0, 0, [\n          {\n            //给颜色设置渐变色 前面4个参数，给第一个设置1，第四个设置0 ，就是水平渐变\n            //给第一个设置0，第四个设置1，就是垂直渐变\n            offset: 0,\n            color: \"#f00\",\n          },\n          {\n            offset: 1,\n            color: \"#00f\",\n          },\n        ]),\n        backgroundColor: \"#f0f\", //两边未选中的滑动条区域的颜色\n        showDataShadow: true, //是否显示数据阴影 默认auto\n        showDetail: true, //即拖拽时候是否显示详细数值信息 默认true\n        handleIcon:\n          \"M-292,322.2c-3.2,0-6.4-0.6-9.3-1.9c-2.9-1.2-5.4-2.9-7.6-5.1s-3.9-4.8-5.1-7.6c-1.3-3-1.9-6.1-1.9-9.3c0-3.2,0.6-6.4,1.9-9.3c1.2-2.9,2.9-5.4,5.1-7.6s4.8-3.9,7.6-5.1c3-1.3,6.1-1.9,9.3-1.9c3.2,0,6.4,0.6,9.3,1.9c2.9,1.2,5.4,2.9,7.6,5.1s3.9,4.8,5.1,7.6c1.3,3,1.9,6.1,1.9,9.3c0,3.2-0.6,6.4-1.9,9.3c-1.2,2.9-2.9,5.4-5.1,7.6s-4.8,3.9-7.6,5.1C-285.6,321.5-288.8,322.2-292,322.2z\",\n        filterMode: \"filter\",\n      },\n      //下面这个属性是里面拖到\n      {\n        type: \"inside\",\n        show: true,\n        xAxisIndex: [0],\n        start: 0, //默认为1\n        end: 50,\n      },\n    ],\n    calculable: true,\n    // 可以为一个函数返回\n    color: [\"#f60\", \"#00f\", \"#0f0\"],\n    series: [\n      {\n        name: \"新增样本统计\",\n        data: dataLine1,\n        stack: \"总量\",\n        type: \"line\",\n      },\n      {\n        name: \"检材统计\",\n        data: dataLine2,\n        stack: \"总量\",\n        type: \"line\",\n      },\n      {\n        name: \"终端数量统计\",\n        data: dataLine3,\n        stack: \"总量\",\n        type: \"line\",\n      },\n    ],\n  };\n\n  useEffect(() => {\n    if (!mapRef) return;\n    const mychart = echarts.init(\n      document.getElementById(\"aline\") as HTMLDivElement\n    );\n    setEchartsInstance(mychart);\n    echartsInstance?.on(\"click\", (params: any) => {\n      console.log(\"params\", params);\n    });\n    echartsInstance?.setOption(option as any);\n  }, [mapRef, option]);\n\n  return (\n    <div\n      id=\"aline\"\n      ref={mapRef}\n      style={{ width: \"100%\", height: \"600px\", border: \"1px solid #ccc\" }}\n    ></div>\n  );\n};\n\nexport default Map;\n","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/MapPie.tsx",["97","98"],"import React, { useEffect, useRef, useState } from \"react\";\nimport echarts, { EChartOption, ECharts } from \"echarts\";\n\ninterface Props {}\nconst rich: any = {\n  one: {\n    color: \"#f5ed00\",\n    fontSize: 25,\n    padding: [1.5, 0],\n    align: \"center\",\n  },\n  two: {\n    color: \"#c58029\",\n    fontSize: 20,\n    padding: [1.5, 0],\n    align: \"center\",\n  },\n  three: {\n    color: \"#fdaaeb\",\n    align: \"center\",\n    fontSize: 32,\n    padding: [1.5, 0],\n  },\n  four: {\n    color: \"#EF3E5A\",\n    fontSize: 25,\n    align: \"center\",\n  },\n  five: {\n    color: \"#f60\",\n    fontSize: 20,\n    align: \"center\",\n  },\n  six: {\n    color: \"#f0f\",\n    fontSize: 20,\n    align: \"center\",\n  },\n};\nconst dataPie: any = [\n  { value: 335, name: \"18-30岁\" },\n  { value: 310, name: \"31-40岁\" },\n  { value: 234, name: \"41-50岁\" },\n  { value: 135, name: \"51-60岁\" },\n  { value: 1548, name: \"61岁以上\" },\n  { value: 542, name: \"未标明\" },\n];\nconst Map: React.FC<Props> = () => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [echartsInstance, setEchartsInstance] = useState<any>(null);\n  const option: EChartOption | any = {\n    title: {\n      text: \"主要的标题\",\n      subtext: \"子标题\",\n      left: \"40%\",\n      top: \"10\",\n      right: \"auto\",\n      bottom: \"auto\",\n      textAlign: \"center\", // 标题居中\n    },\n\n    tooltip: {\n      show: true,\n      backgroundColor: \"#f3214c\", //提示标签背景颜色\n      textStyle: { color: \"#ffa\", align: \"left\" }, //提示标签字体颜色\n      formatter: \"{a} <br/>{b}: {c} ({d}%)\",\n      // formatter: (params: any) => {\n      //   return `{a}${params.name}:${params.value}`;\n      // },\n    },\n    /** 图标kuangao */\n    grid: {\n      containLabel: true,\n      left: 10,\n      right: 5,\n      top: 60,\n      bottom: 10,\n    },\n    legend: {\n      orient: \"vertical\",\n      data: [\"18-30岁\", \"31-40岁\", \"41-50岁\", \"51-60岁\", \"61岁以上\", \"未标明\"],\n      top: \"12%\",\n      right: \"50\",\n      itemGap: 15,\n      icon: \"square\",\n      textStyle: {\n        // 边栏字体颜色\n        color: \"rgba(100, 100, 100, 1)\",\n        fontSize: 16,\n        rich: rich,\n      },\n      formatter: function (name: any) {\n        // console.log(\"name==\", name);\n        let str: string = \"\";\n        dataPie.forEach((item: any, i: number) => {\n          if (item.name === name) {\n            const color = Object.keys(rich)[i];\n            str += `${item.name} | {${color}|${item.value}}%`;\n          }\n        });\n        return str;\n      },\n    },\n    // 可以为一个函数返回\n    series: [\n      {\n        name: \"位置追踪\",\n        data: dataPie,\n        type: \"pie\",\n        radius: [\"50%\", \"70%\"],\n        avoidLabelOverlap: false,\n        // 是否显示环形中间的文字formatter\n        label: {\n          show: false,\n          position: \"center\", // 文字再环形中间还是两边: right/left...\n          // formatter: function (params:any) {\n          //   console.log('params*****', params)\n          // }\n          formatter: \"{b}\\n{c} ({d}%)\",\n        },\n        // hover环形中间的文字样式\n        emphasis: {\n          label: {\n            show: true,\n            fontSize: 20,\n            fontWeight: \"bold\",\n          },\n        },\n        labelLine: {\n          show: false,\n        },\n        // 柱状图背景色\n        showBackground: true,\n        backgroundStyle: {\n          // color: \"rgba(255, 0, 220, 0.5)\",\n          color: \"#0f0\",\n        },\n\n        itemStyle: {\n          color: function (data: any) {\n            const index = data.dataIndex;\n            const color = Object.keys(rich)[index];\n            return rich[color].color;\n          },\n        },\n      },\n    ],\n  };\n\n  useEffect(() => {\n    if (!mapRef) return;\n    const mychart = echarts.init(\n      document.getElementById(\"apie\") as HTMLDivElement\n    );\n    setEchartsInstance(mychart);\n    echartsInstance?.on(\"click\", (params: any) => {\n      console.log(\"params\", params);\n    });\n    echartsInstance?.setOption(option as any);\n  }, [mapRef, option]);\n\n  return (\n    <div\n      id=\"apie\"\n      ref={mapRef}\n      style={{ width: \"100%\", height: \"600px\", border: \"1px solid #ccc\" }}\n    ></div>\n  );\n};\n\nexport default Map;\n","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/MapBar.tsx",["99","100","101","102","103"],"import React, { useEffect, useRef, useState } from \"react\";\nimport echarts, { EChartOption, ECharts } from \"echarts\";\n\ninterface Props {}\nconst data: { name: string; value: number }[] = [\n  { name: \"南海诸岛\", value: 0 },\n  { name: \"香港\", value: 70 },\n  { name: \"澳门\", value: 2 },\n];\n\nconst COLOR_MAP = [\n  [\"#5A7BEF\", \"#4048EF\"],\n  [\"#FE9B86\", \"#F15887\"],\n  [\"#5A7BEF\", \"#4048EF\"],\n  [\"#14D2B8\", \"#2DC9EB\"],\n  [\"#fff\", \"#fff\"],\n  [\"#A573FF\", \"#645AFF\"],\n  [\"#FFA073\", \"#FF8298\"],\n  [\"#14D2B8\", \"#2DC9EB\"],\n  [\"#5A7BEF\", \"#4048EF\"],\n];\n\nconst Map: React.FC<Props> = () => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [echartsInstance, setEchartsInstance] = useState<any>(null);\n  const option: EChartOption | any = {\n    title: {\n      text: \"主要的标题\",\n      subtext: \"子标题\",\n      left: \"40%\",\n      top: \"10\",\n      right: \"auto\",\n      bottom: \"auto\",\n      textAlign: \"center\", // 标题居中\n    },\n\n    tooltip: {\n      show: true,\n      trigger: 'item',\n      backgroundColor: \"#f3214c\", //提示标签背景颜色\n      textStyle: { color: \"#ffa\" }, //提示标签字体颜色\n      // formatter: (params: any) => {\n      //   return `${params.name}:${params.value}`;\n      // },\n      formatter: '{a}<br/>{b}: {c}'\n    },\n    /** 图标kuangao */\n    grid: {\n      containLabel: true,\n      left: 10,\n      right: 5,\n      top: 60,\n      bottom: 10,\n    },\n    xAxis: {\n      type: \"category\",\n      data: [\"类别1\", \"类别2\", \"类别3\", \"类别4\", \"类别5\", \"类别6\", \"类别7\"],\n      axisLabel: {\n        color: \"#f0f\",\n        fontSize: 10,\n        margin: 5,\n        interval: 0,\n        formatter: (value: string, index: number) => {\n          return `${value.charAt(0) || \"\"}${value.charAt(1) || \"\"}${\n            value.charAt(2) ? \"...\" : \"\"\n          }`;\n        },\n      },\n      show: true,\n      axisTick: {\n        show: false,\n      },\n      axisLine: {\n        show: false,\n      },\n    },\n    yAxis: {\n      axisLine: {\n        show: false,\n      },\n      axisTick: {\n        show: false,\n      },\n      axisLabel: {\n        color: \"#f60\",\n      },\n      splitLine: {\n        show: false,\n      },\n    },\n    dataZoom: [\n      {\n        type: \"inside\",\n      },\n    ],\n    // 可以为一个函数返回\n    series: [\n      {\n        name: \"人员分布\",\n        data: [120, 300, 150, 80, 70, 110, 130],\n        type: \"bar\",\n        // 柱状图背景色\n        showBackground: true,\n        backgroundStyle: {\n          // color: \"rgba(255, 0, 220, 0.5)\",\n          color: \"#0f0\",\n        },\n        itemStyle: {\n          shadowColor: \"rgba(0, 0, 0, 0.5)\",\n          shadowBlur: 10,\n          // barBorderRadius: 4, // 柱子圆角\n          barBorderRadius: [5, 5, 0, 0],\n          color: (params: any) => {\n            const color =\n              COLOR_MAP[params.dataIndex] ||\n              COLOR_MAP[Math.floor(Math.random() * 9)];\n            const index = params.dataIndex % 2; // 各行换色\n            return index == 1 ? \"#f60\" : \"#00f\";\n            // 颜色渐变\n            // return new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            //     {offset: 0, color: color[0]},\n            //     {offset: 1, color: color[1]},\n            // ]);\n          },\n        },\n      },\n    ],\n  };\n\n  useEffect(() => {\n    if (!mapRef) return;\n    const mychart = echarts.init(\n      document.getElementById(\"abar\") as HTMLDivElement\n    );\n    setEchartsInstance(mychart);\n    echartsInstance?.on(\"click\", (params: any) => {\n      console.log(\"params\", params);\n    });\n    echartsInstance?.setOption(option as any);\n  }, [mapRef, option]);\n\n  return (\n    <div\n      id=\"abar\"\n      ref={mapRef}\n      style={{ width: \"100%\", height: \"600px\", border: \"1px solid #ccc\" }}\n    ></div>\n  );\n};\n\nexport default Map;\n","/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/Map.tsx",["104","105","106"],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/data/cityMap.ts",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/PeopleFieldChart.tsx",[],"/Users/lixiuhai/workspace/dev/react/react-ts-library/src/components/PeopleNumberChart.tsx",["107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":16},{"ruleId":"113","severity":1,"message":"117","line":2,"column":33,"nodeType":"115","messageId":"116","endLine":2,"endColumn":40},{"ruleId":"113","severity":1,"message":"118","line":5,"column":7,"nodeType":"115","messageId":"116","endLine":5,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":206,"column":6,"nodeType":"121","endLine":206,"endColumn":22,"suggestions":"122"},{"ruleId":"113","severity":1,"message":"117","line":2,"column":33,"nodeType":"115","messageId":"116","endLine":2,"endColumn":40},{"ruleId":"119","severity":1,"message":"120","line":160,"column":6,"nodeType":"121","endLine":160,"endColumn":22,"suggestions":"123"},{"ruleId":"113","severity":1,"message":"117","line":2,"column":33,"nodeType":"115","messageId":"116","endLine":2,"endColumn":40},{"ruleId":"113","severity":1,"message":"124","line":5,"column":7,"nodeType":"115","messageId":"116","endLine":5,"endColumn":46},{"ruleId":"113","severity":1,"message":"125","line":114,"column":19,"nodeType":"115","messageId":"116","endLine":114,"endColumn":24},{"ruleId":"126","severity":1,"message":"127","line":118,"column":26,"nodeType":"128","messageId":"129","endLine":118,"endColumn":28},{"ruleId":"119","severity":1,"message":"120","line":140,"column":6,"nodeType":"121","endLine":140,"endColumn":22,"suggestions":"130"},{"ruleId":"113","severity":1,"message":"117","line":5,"column":33,"nodeType":"115","messageId":"116","endLine":5,"endColumn":40},{"ruleId":"113","severity":1,"message":"131","line":10,"column":7,"nodeType":"115","messageId":"116","endLine":10,"endColumn":10},{"ruleId":"119","severity":1,"message":"132","line":294,"column":6,"nodeType":"121","endLine":294,"endColumn":22,"suggestions":"133"},{"ruleId":"113","severity":1,"message":"118","line":9,"column":9,"nodeType":"115","messageId":"116","endLine":9,"endColumn":18},{"ruleId":"113","severity":1,"message":"134","line":45,"column":9,"nodeType":"115","messageId":"116","endLine":45,"endColumn":21},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'ECharts' is defined but never used.","'rich' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'echartsInstance'. Either include it or remove the dependency array.","ArrayExpression",["137"],["138"],"'data' is assigned a value but never used.","'color' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["139"],"'com' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'echartsInstance' and 'getCity'. Either include them or remove the dependency array.",["140"],"'dataPie' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},{"desc":"141","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [echartsInstance, mapRef, option]",{"range":"147","text":"148"},{"range":"149","text":"148"},{"range":"150","text":"148"},"Update the dependencies array to be: [echartsInstance, getCity, mapRef, option]",{"range":"151","text":"152"},[5366,5382],"[echartsInstance, mapRef, option]",[3804,3820],[3438,3454],[7714,7730],"[echartsInstance, getCity, mapRef, option]"]